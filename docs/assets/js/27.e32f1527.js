(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{346:function(t,s,e){"use strict";e.r(s);var a=e(6),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"资源管理-resource-management"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#资源管理-resource-management"}},[t._v("#")]),t._v(" 资源管理, Resource Management")]),t._v(" "),e("h3",{attrs:{id:"item-13-以对象管理资源-use-objects-to-manage-resources"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-13-以对象管理资源-use-objects-to-manage-resources"}},[t._v("#")]),t._v(" Item 13：以对象管理资源 Use objects to   manage resources.")]),t._v(" "),e("ol",{attrs:{start:"13"}},[e("li",[e("p",[t._v("用对象的形式管理资源 (RAII， Resource Acquisition Is Initialization)，所以要特别注意构造和析构函数，在使用对象的时候可以使用shared_ptr之类的智能指针来管理每个对象的实例；")]),t._v(" "),e("ol",[e("li",[t._v("返回没有加工的指针， 容易造成资源泄露， 忘记delete")]),t._v(" "),e("li",[t._v("手动释放资源， 可能会跑不到释放的那个地方， 也有可能造成double release；")]),t._v(" "),e("li",[t._v("不要多个auto_ptr()指向同一个对象， 不然对象可能会被多次删除， 程序就会有未定义行为；")]),t._v(" "),e("li",[t._v("使用factory设计模式来供给需要的Invest对象")]),t._v(" "),e("li",[t._v("copy assignment要让原来的指针变成null")]),t._v(" "),e("li",[t._v("使用reference counting smart pointer, 使用"),e("strong",[t._v("shared_ptr()")]),t._v(" 相关的实现；")])])])]),t._v(" "),e("h3",{attrs:{id:"item-14-在资源管理类中小心copying行为-think-carefully-about-copyingbehavior-in-resource-managing-classes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-14-在资源管理类中小心copying行为-think-carefully-about-copyingbehavior-in-resource-managing-classes"}},[t._v("#")]),t._v(" Item 14：在资源管理类中小心copying行为 Think     carefully about copyingbehavior in resource-managing classes.")]),t._v(" "),e("ol",{attrs:{start:"14"}},[e("li",[e("p",[t._v("虽然都是RAII原则， 但是要特别注意拷贝构造的行为，")]),t._v(" "),e("ol",[e("li",[t._v("一些复制行为明显是没有意义， 不合理的， 书里面用linux中的mutex的lock和unlock函数来举例子， 这个时候要禁止复制的行为；--\x3e uncopyable(陈硕muduo库里面， 好像也有类似的指定操作)， 或者把这些copy assignment设为private或者=delete")]),t._v(" "),e("li",[t._v("底层资源使用reference-count的方式；")]),t._v(" "),e("li",[t._v("要清楚自己做的是深拷贝还是浅拷贝，要确保自己是在做深拷贝， 不仅拷贝指针， 也拷贝指针所指的内存块；")]),t._v(" "),e("li",[t._v("有时候拷贝其实是一种转移， 要确保系统中给目前只有这一个对象， 从一个地方转移到另外一个地方--\x3e auto_ptr， shared_ptr(), 对这些指针的内部构造要很熟悉。【rebuild the auto ptr code demo】")]),t._v(" "),e("li",[t._v("自动生成的拷贝函数不一定能够满足需求；")])])])]),t._v(" "),e("h3",{attrs:{id:"item-15-在资源管理类中提供对原始资源的访问-provide-access-to-raw-resources-in-resource-managing-classes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-15-在资源管理类中提供对原始资源的访问-provide-access-to-raw-resources-in-resource-managing-classes"}},[t._v("#")]),t._v(" Item 15：在资源管理类中提供对原始资源的访问 Provide access to raw resources in resource-managing classes.")]),t._v(" "),e("ol",{attrs:{start:"15"}},[e("li",[e("p",[t._v("资源管理类中， 提供对原始资源的访问接口， 例如x.get， get_instance这种接口, 让类有接口返回内部资源")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("返回数字，")])]),t._v(" "),e("li",[e("p",[t._v("返回一个instance")])]),t._v(" "),e("li",[e("p",[t._v("singleton的设计模式是怎么做的?")])]),t._v(" "),e("li",[e("p",[t._v("factory模式是怎么做的？")])]),t._v(" "),e("li",[e("p",[t._v("操作符重载, 这是一种隐式转换的方法， 客户使用起来比较方便，但是显示转换会比较安全（使用xxxx.get()的模式）")]),t._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Font")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("operator")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("FontHandle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//也可以重载类型转换函数；")]),t._v("\n    \t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])])])])])]),t._v(" "),e("h3",{attrs:{id:"item-16-成对使用new和delete时要采取相同形式-use-the-same-form-in-corresponding-uses-of-new-and-delete"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-16-成对使用new和delete时要采取相同形式-use-the-same-form-in-corresponding-uses-of-new-and-delete"}},[t._v("#")]),t._v(" Item 16：成对使用new和delete时要采取相同形式 Use the same form in corresponding uses of new and delete.")]),t._v(" "),e("ol",{attrs:{start:"16"}},[e("li",[e("p",[t._v("new和delete使用的时候要成对使用， 并且注意区别数组和对象的delete")]),t._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("std"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" stringPtr1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstd"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" stringPtr2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" stringPtr1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除一个对象， 一个指针；")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" stringPtr2"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除一个数组， 一块内存")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("ul",[e("li",[t._v("operator new, new operator的区别？")]),t._v(" "),e("li",[t._v("placement new / new placement区别？[Item 49之后有一些解释]")])]),t._v(" "),e("h3",{attrs:{id:"item-17-以独立语句将newed对象置入智能指针-store-newed-objects-in-smart-pointers-in-standalone-statements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#item-17-以独立语句将newed对象置入智能指针-store-newed-objects-in-smart-pointers-in-standalone-statements"}},[t._v("#")]),t._v(" Item 17：以独立语句将newed对象置入智能指针 Store newed objects in smart pointers in standalone statements.")])]),t._v(" "),e("li",[e("p",[t._v("要保证new这个语句是单独执行的， 先于智能指针的赋值操作；")]),t._v(" "),e("div",{staticClass:"language-cpp line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("processWidget")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("tr1"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token generic-function"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shared_ptr")]),e("span",{pre:!0,attrs:{class:"token generic class-name"}},[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Widget"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Widget"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("priority")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 万一priority()这个函数抛出执行异常会怎样？")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用一个单独的语句来构造shared_ptr变量; 保证这行代码是单独执行的;")]),t._v("\nstd"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("tr1"),e("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Widget"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pw")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" Widget"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("processWidget")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pw"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("priority")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])])])]),t._v(" "),e("h2",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])])])}),[],!1,null,null,null);s.default=n.exports}}]);